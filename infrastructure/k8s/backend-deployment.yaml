apiVersion: apps/v1
kind: Deployment
metadata:
  name: trading-bot-backend
  namespace: trading-bot-prod
  labels:
    app: trading-bot
    component: backend
    environment: production
  annotations:
    description: "AI-powered Solana trading bot backend deployment"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: trading-bot
      component: backend
  template:
    metadata:
      labels:
        app: trading-bot
        component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      containers:
      - name: trading-bot-backend
        image: trading-bot/backend:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
        - name: metrics
          containerPort: 9090
        resources:
          requests:
            cpu: "2000m"
            memory: "4Gi"
          limits:
            cpu: "4000m"
            memory: "8Gi"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
        envFrom:
        - configMapRef:
            name: backend-config
        - secretRef:
            name: database-secrets
        env:
        - name: NODE_ENV
          value: "production"
        - name: RUST_LOG
          value: "info"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: config
          mountPath: /app/config
      volumes:
      - name: tmp
        emptyDir: {}
      - name: config
        configMap:
          name: backend-config
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: trading-bot
                  component: backend
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: Exists
      terminationGracePeriodSeconds: 60
      serviceAccountName: trading-bot-backend
      securityContext:
        fsGroup: 1000